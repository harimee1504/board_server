input WorkItemCreate {
    title: String! 
    description: String
    type: String!
    assignedTo: String
    sprint: ID
    priority: String
    storyPoints: Int
    original_estimate: Int
    parent: ID
    mentions: [String]
    tags: [String]
}

input WorkItemUpdate {
    id: ID!
    title: String
    description: String
    state: String
    type: String!
    assignedTo: String
    sprint: ID
    priority: String
    storyPoints: Int
    original_estimate: Int
    parent: ID
    mentions: [String]
    tags: [String]
}

input WorkItemDelete {
    id: ID!
}

input WorkItemStateUpdate {
    id: ID!
    state: String!
    org_id: String!
}

type WorkItemOverview {
    id: ID!
    u_id: String!
    title: String!
    state: String!
    type: String!
    assignedTo: String
    org_id: String!
    spillover: Boolean
    current_sprint: String
    story_points: Int
    remaining_estimate: Int
    parent: String
}

type WorkItem {
    id: ID!
    u_id: String!
    title: String!
    description: String
    state: String!
    type: String!
    createdBy: User
    updatedBy: User
    sprint: ID
    assignedTo: User
    org_id: String
    createdAt: Date
    updatedAt: Date
    spillover: Boolean
    initial_sprint: String
    current_sprint: String
    priority: String
    story_points: Int
    original_estimate: Int
    remaining_estimate: Int
    completed_estimate: Int
    acceptance_criteria: String
    definition_of_done: String
    parent: WorkItem
    tags: [Tag]
    mentions: [User]
}

extend type Query {
    getWorkItems : [WorkItem]
}

extend type Mutation {
    createWorkItem(input: WorkItemCreate) : WorkItem
    updateWorkItem(input: WorkItemUpdate) : WorkItem
    deleteWorkItem(input: WorkItemDelete) : Deleted
    updateWorkItemState(input: WorkItemStateUpdate) : WorkItem
}